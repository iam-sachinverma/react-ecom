{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\"; // Firebase FireStore\n\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\"; // Web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDwP6zV4IhiSDwDIaE5efeNVPc1BjwMas4\",\n  authDomain: \"crown-db-57278.firebaseapp.com\",\n  projectId: \"crown-db-57278\",\n  storageBucket: \"crown-db-57278.appspot.com\",\n  messagingSenderId: \"390341811807\",\n  appId: \"1:390341811807:web:c8e8f33e3d6801665645ea\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider); // FireStore DB\n\nexport const db = getFirestore(firebaseApp);\nexport const createUserDocumentFromAuth = async userAuth => {\n  // docRef refers to a document location in a Firestore database\n  const userDocRef = doc(db, \"users\", userAuth.uid); // db, collection_name, unique_id\n\n  console.log(userDocRef); // Doc Snapshot contains data read from a doc in your Firestore database and also allow us to acces data\n\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot); // exists() property to explicitly verify a document's existence.\n\n  console.log(userSnapshot.exists()); // if user does'not exist\n  // create / set the docu with the data from useAuth in collection\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  } // if user data exist\n\n\n  return userDocRef;\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message"],"sources":["C:/Users/Soul/OneDrive/Desktop/crown-ecom/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithRedirect,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n} from \"firebase/auth\";\r\n\r\n// Firebase FireStore\r\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\r\n\r\n// Web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDwP6zV4IhiSDwDIaE5efeNVPc1BjwMas4\",\r\n  authDomain: \"crown-db-57278.firebaseapp.com\",\r\n  projectId: \"crown-db-57278\",\r\n  storageBucket: \"crown-db-57278.appspot.com\",\r\n  messagingSenderId: \"390341811807\",\r\n  appId: \"1:390341811807:web:c8e8f33e3d6801665645ea\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\n\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n\r\nexport const signInWithGoogleRedirect = () =>\r\n  signInWithRedirect(auth, googleProvider);\r\n\r\n// FireStore DB\r\nexport const db = getFirestore(firebaseApp);\r\nexport const createUserDocumentFromAuth = async (userAuth) => {\r\n  // docRef refers to a document location in a Firestore database\r\n  const userDocRef = doc(db, \"users\", userAuth.uid); // db, collection_name, unique_id\r\n  console.log(userDocRef);\r\n\r\n  // Doc Snapshot contains data read from a doc in your Firestore database and also allow us to acces data\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  console.log(userSnapshot);\r\n  // exists() property to explicitly verify a document's existence.\r\n  console.log(userSnapshot.exists());\r\n\r\n  // if user does'not exist\r\n  // create / set the docu with the data from useAuth in collection\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating the user\", error.message);\r\n    }\r\n  }\r\n\r\n  // if user data exist\r\n  return userDocRef;\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,eALP,C,CAOA;;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD,C,CAEA;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,gCAFS;EAGrBC,SAAS,EAAE,gBAHU;EAIrBC,aAAa,EAAE,4BAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIb,kBAAJ,EAAvB;AAEAa,cAAc,CAACC,mBAAf,CAAmC;EACjCC,MAAM,EAAE;AADyB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAApB;AACP,OAAO,MAAMoB,qBAAqB,GAAG,MACnClB,eAAe,CAACiB,IAAD,EAAOH,cAAP,CADV;AAGP,OAAO,MAAMK,wBAAwB,GAAG,MACtCpB,kBAAkB,CAACkB,IAAD,EAAOH,cAAP,CADb,C,CAGP;;AACA,OAAO,MAAMM,EAAE,GAAGlB,YAAY,CAACW,WAAD,CAAvB;AACP,OAAO,MAAMQ,0BAA0B,GAAG,MAAOC,QAAP,IAAoB;EAC5D;EACA,MAAMC,UAAU,GAAGpB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB,CAF4D,CAET;;EACnDC,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAH4D,CAK5D;;EACA,MAAMI,YAAY,GAAG,MAAMvB,MAAM,CAACmB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAP4D,CAQ5D;;EACAF,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ,EAT4D,CAW5D;EACA;;EACA,IAAI,CAACD,YAAY,CAACC,MAAb,EAAL,EAA4B;IAC1B,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBR,QAA/B;IACA,MAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACF,MAAM3B,MAAM,CAACkB,UAAD,EAAa;QACvBM,WADuB;QAEvBC,KAFuB;QAGvBC;MAHuB,CAAb,CAAZ;IAKD,CAND,CAME,OAAOE,KAAP,EAAc;MACdR,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCO,KAAK,CAACC,OAA7C;IACD;EACF,CA1B2D,CA4B5D;;;EACA,OAAOX,UAAP;AACD,CA9BM"},"metadata":{},"sourceType":"module"}