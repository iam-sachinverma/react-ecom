{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Soul\\\\OneDrive\\\\Desktop\\\\crown-ecom\\\\src\\\\routes\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { getRedirectResult } from \"firebase/auth\";\nimport { auth, signInWithGooglePopup, signInWithGoogleRedirect, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  // useEffect(async () => {\n  //   const response = await getRedirectResult(auth);\n  //   if (response) {\n  //     const userDocRef = await createUserDocumentFromAuth(response.user);\n  //   }\n  // });\n  useEffect(() => {\n    async function fetchRedirectResult() {\n      const response = await getRedirectResult(auth);\n      console.log(response);\n    }\n\n    fetchRedirectResult();\n  });\n\n  const logGoogleUser = async () => {\n    const {\n      user\n    } = await signInWithGooglePopup();\n    const userDocRef = await createUserDocumentFromAuth(user);\n  }; // const logGoogleRedirect = async () => {\n  //   const { user } = await signInWithGoogleRedirect();\n  //   console.log({ user });\n  //! user not log beacuse we redirect to diffrent domain so website will mount again when redirect back\n  //! to fix this we use useEffect(), getRedirectResult, auth\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hii sign-in page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logGoogleUser,\n      children: \"sign-in with google popup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithGoogleRedirect,\n      children: \"sign-in with google redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useEffect","getRedirectResult","auth","signInWithGooglePopup","signInWithGoogleRedirect","createUserDocumentFromAuth","SignIn","fetchRedirectResult","response","console","log","logGoogleUser","user","userDocRef"],"sources":["C:/Users/Soul/OneDrive/Desktop/crown-ecom/src/routes/sign-in/sign-in.component.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { getRedirectResult } from \"firebase/auth\";\r\n\r\nimport {\r\n  auth,\r\n  signInWithGooglePopup,\r\n  signInWithGoogleRedirect,\r\n  createUserDocumentFromAuth,\r\n} from \"../../utils/firebase/firebase.utils\";\r\n\r\nconst SignIn = () => {\r\n  // useEffect(async () => {\r\n  //   const response = await getRedirectResult(auth);\r\n\r\n  //   if (response) {\r\n  //     const userDocRef = await createUserDocumentFromAuth(response.user);\r\n  //   }\r\n  // });\r\n\r\n  useEffect(() => {\r\n    async function fetchRedirectResult() {\r\n      const response = await getRedirectResult(auth);\r\n      console.log(response);\r\n    }\r\n    fetchRedirectResult();\r\n  });\r\n\r\n  const logGoogleUser = async () => {\r\n    const { user } = await signInWithGooglePopup();\r\n    const userDocRef = await createUserDocumentFromAuth(user);\r\n  };\r\n\r\n  // const logGoogleRedirect = async () => {\r\n  //   const { user } = await signInWithGoogleRedirect();\r\n  //   console.log({ user });\r\n  //! user not log beacuse we redirect to diffrent domain so website will mount again when redirect back\r\n  //! to fix this we use useEffect(), getRedirectResult, auth\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Hii sign-in page</h1>\r\n      <button onClick={logGoogleUser}>sign-in with google popup</button>\r\n      <button onClick={signInWithGoogleRedirect}>\r\n        sign-in with google redirect\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,QAAkC,eAAlC;AAEA,SACEC,IADF,EAEEC,qBAFF,EAGEC,wBAHF,EAIEC,0BAJF,QAKO,qCALP;;;AAOA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB;EACA;EAEA;EACA;EACA;EACA;EAEAN,SAAS,CAAC,MAAM;IACd,eAAeO,mBAAf,GAAqC;MACnC,MAAMC,QAAQ,GAAG,MAAMP,iBAAiB,CAACC,IAAD,CAAxC;MACAO,OAAO,CAACC,GAAR,CAAYF,QAAZ;IACD;;IACDD,mBAAmB;EACpB,CANQ,CAAT;;EAQA,MAAMI,aAAa,GAAG,YAAY;IAChC,MAAM;MAAEC;IAAF,IAAW,MAAMT,qBAAqB,EAA5C;IACA,MAAMU,UAAU,GAAG,MAAMR,0BAA0B,CAACO,IAAD,CAAnD;EACD,CAHD,CAjBmB,CAsBnB;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAED,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEP,wBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAtCD;;GAAME,M;;KAAAA,M;AAwCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}